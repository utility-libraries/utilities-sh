#!/usr/bin/env python3
import sys
import argparse
import textwrap


parser = argparse.ArgumentParser(
    prog="textwrap",
    description=__doc__,
    formatter_class=argparse.ArgumentDefaultsHelpFormatter,
)
subparsers = parser.add_subparsers()

parser_fill = subparsers.add_parser("fill",
                                    help="Reformat 'text' to fit in lines of no more than 'width' columns")
parser_fill.set_defaults(fn=textwrap.fill)
parser_fill.add_argument('-w', '--width', type=int, default=80,
                         help="Maximum width of the lines")
parser_fill.add_argument('--tabsize', type=int, default=4,
                         help="number of spaces a \\t gets expanded to")

parser_dedent = subparsers.add_parser("dedent",
                                      help="Remove any common leading whitespace from every line in text")
parser_dedent.set_defaults(fn=textwrap.dedent)

parser_indent = subparsers.add_parser("indent",
                                      help="Adds 'prefix' to the beginning the lines in 'text'")
parser_indent.set_defaults(fn=textwrap.indent)
parser_indent.add_argument('-p', '--prefix', type=str, default=' ' * 4,
                           help="to be added at the beginning of the lines")

parser_shorten = subparsers.add_parser("shorten",
                                       help="Collapse and truncate the given text to fit in the given width")
parser_shorten.set_defaults(fn=textwrap.shorten)
parser_shorten.add_argument('-w', '--width', type=int, default=80,
                            help="Maximum width of the lines")
parser_shorten.add_argument('-p', '--prefix', type=str,
                            help="Adds 'placeholder' at the end if the text is truncated")

args = vars(parser.parse_args())


if __name__ == '__main__':
    fn = args.pop('fn')
    sys.stdout.write(
        fn(text=sys.stdin.read(), **args)
    )
